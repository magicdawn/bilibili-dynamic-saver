// Generated by https://quicktype.io

export interface DynamicFeedJson {
  code: number
  message: string
  ttl: number
  data: Data
}

export interface Data {
  has_more: boolean
  items: DynamicFeedItem[]
  offset: string
  update_baseline: string
  update_num: number
}

export interface DynamicFeedItem {
  basic: Basic
  id_str: string
  modules: ItemModules
  type: DynamicType
  visible: boolean
  orig?: Orig
}

export interface Basic {
  comment_id_str: string
  comment_type: number
  like_icon: LikeIcon
  rid_str: string
  jump_url?: string
}

export interface LikeIcon {
  action_url: string
  end_url: string
  id: number
  start_url: string
}

export interface ItemModules {
  module_author: PurpleModuleAuthor
  module_dynamic: PurpleModuleDynamic
  module_more: ModuleMore
  module_stat: ModuleStat
  module_interaction?: ModuleInteraction
}

export interface PurpleModuleAuthor {
  avatar: PurpleAvatar
  face: string
  face_nft: boolean
  following: boolean
  jump_url: string
  label: string
  mid: number
  name: string
  official_verify: OfficialVerify
  pendant: Pendant
  pub_action: PubAction
  pub_location_text: string
  pub_time: string
  pub_ts: number
  type: ModuleAuthorType
  vip: Vip
}

export interface PurpleAvatar {
  container_size: ContainerSize
  fallback_layers: PurpleFallbackLayers
  mid: string
}

export interface ContainerSize {
  height: number
  width: number
}

export interface PurpleFallbackLayers {
  is_critical_group: boolean
  layers: PurpleLayer[]
}

export interface PurpleLayer {
  general_spec: GeneralSpec
  layer_config: PurpleLayerConfig
  resource: Resource
  visible: boolean
}

export interface GeneralSpec {
  pos_spec: PosSpec
  render_spec: RenderSpec
  size_spec: ContainerSize
}

export interface PosSpec {
  axis_x: number
  axis_y: number
  coordinate_pos: number
}

export interface RenderSpec {
  opacity: number
}

export interface PurpleLayerConfig {
  is_critical?: boolean
  tags: PurpleTags
}

export interface PurpleTags {
  AVATAR_LAYER?: Layer
  GENERAL_CFG: PurpleGENERALCFG
  ICON_LAYER?: Layer
}

export interface Layer {}

export interface PurpleGENERALCFG {
  config_type: number
  general_config: PurpleGeneralConfig
}

export interface PurpleGeneralConfig {
  web_css_style: PurpleWebCSSStyle
}

export interface PurpleWebCSSStyle {
  'borderRadius': BorderRadius
  'background-color'?: BackgroundColor
  'border'?: Border
  'boxSizing'?: BoxSizing
}

export enum BackgroundColor {
  RGB255255255 = 'rgb(255,255,255)',
}

export enum Border {
  The2PxSolidRGBA2552552551 = '2px solid rgba(255,255,255,1)',
}

export enum BorderRadius {
  The50 = '50%',
}

export enum BoxSizing {
  BorderBox = 'border-box',
}

export interface Resource {
  res_image: ResImage
  res_type: number
}

export interface ResImage {
  image_src: ImageSrc
}

export interface ImageSrc {
  placeholder?: number
  remote?: Remote
  src_type: number
  local?: number
}

export interface Remote {
  bfs_style: BFSStyle
  url: string
}

export enum BFSStyle {
  WidgetLayerAvatar = 'widget-layer-avatar',
}

export interface OfficialVerify {
  desc: string
  type: number
}

export interface Pendant {
  expire: number
  image: string
  image_enhance: string
  image_enhance_frame: string
  n_pid: number
  name: string
  pid: number
}

export enum PubAction {
  Empty = '',
  投稿了视频 = '投稿了视频',
}

export enum ModuleAuthorType {
  AuthorTypeNormal = 'AUTHOR_TYPE_NORMAL',
}

export interface Vip {
  avatar_subscript: number
  avatar_subscript_url: string
  due_date: number
  label: LabelClass
  nickname_color: Color
  status: number
  theme_type: number
  type: number
}

export interface LabelClass {
  bg_color: Color
  bg_style: number
  border_color: string
  img_label_uri_hans: string
  img_label_uri_hans_static: string
  img_label_uri_hant: string
  img_label_uri_hant_static: string
  label_theme: LabelTheme
  path: string
  text: Text
  text_color: TextColorEnum
  use_img_label: boolean
}

export enum Color {
  Empty = '',
  Fb7299 = '#FB7299',
}

export enum LabelTheme {
  AnnualVip = 'annual_vip',
  Empty = '',
}

export enum Text {
  Empty = '',
  年度大会员 = '年度大会员',
}

export enum TextColorEnum {
  Empty = '',
  Ffffff = '#FFFFFF',
}

export interface PurpleModuleDynamic {
  additional: Additional | null
  desc: Desc | null
  major: PurpleMajor | null
  topic: Topic | null
}

export interface Additional {
  type: string
  ugc: Ugc
}

export interface Ugc {
  cover: string
  desc_second: string
  duration: string
  head_text: string
  id_str: string
  jump_url: string
  multi_line: boolean
  title: string
}

export interface Desc {
  rich_text_nodes: RichTextNode[]
  text: string
}

export interface RichTextNode {
  orig_text: string
  text: string
  type: RichTextNodeType
  emoji?: Emoji
  rid?: string
}

export interface Emoji {
  icon_url: string
  size: number
  text: string
  type: number
}

export enum RichTextNodeType {
  RichTextNodeTypeAt = 'RICH_TEXT_NODE_TYPE_AT',
  RichTextNodeTypeEmoji = 'RICH_TEXT_NODE_TYPE_EMOJI',
  RichTextNodeTypeText = 'RICH_TEXT_NODE_TYPE_TEXT',
}

export interface PurpleMajor {
  archive?: Archive
  type: MajorType
  opus?: Opus
}

export interface Archive {
  aid: string
  badge: Badge
  bvid: string
  cover: string
  desc: string
  disable_preview: number
  duration_text: string
  jump_url: string
  stat: Stat
  title: string
  type: number
}

export interface Badge {
  bg_color: Color
  color: TextColorEnum
  icon_url: null
  text: string
}

export interface Stat {
  danmaku: string
  play: string
}

export interface Opus {
  fold_action: FoldAction[]
  jump_url: string
  pics: Pic[]
  summary: Desc
  title: null
}

export enum FoldAction {
  展开 = '展开',
  收起 = '收起',
}

export interface Pic {
  height: number
  size: number
  url: string
  width: number
}

export enum MajorType {
  MajorTypeArchive = 'MAJOR_TYPE_ARCHIVE',
  MajorTypeOpus = 'MAJOR_TYPE_OPUS',
}

export interface Topic {
  id: number
  jump_url: string
  name: string
}

export interface ModuleInteraction {
  items: ModuleInteractionItem[]
}

export interface ModuleInteractionItem {
  desc: Desc
  type: number
}

export interface ModuleMore {
  three_point_items: ThreePointItem[]
}

export interface ThreePointItem {
  label: LabelEnum
  type: ThreePointItemType
}

export enum LabelEnum {
  举报 = '举报',
  取消关注 = '取消关注',
}

export enum ThreePointItemType {
  ThreePointFollowing = 'THREE_POINT_FOLLOWING',
  ThreePointReport = 'THREE_POINT_REPORT',
}

export interface ModuleStat {
  comment: Comment
  forward: Comment
  like: Like
}

export interface Comment {
  count: number
  forbidden: boolean
}

export interface Like {
  count: number
  forbidden: boolean
  status: boolean
}

export interface Orig {
  basic: Basic
  id_str: string
  modules: OrigModules
  type: DynamicType
  visible: boolean
}

export interface OrigModules {
  module_author: FluffyModuleAuthor
  module_dynamic: FluffyModuleDynamic
}

export interface FluffyModuleAuthor {
  avatar: FluffyAvatar
  face: string
  face_nft: boolean
  following: null
  jump_url: string
  label: string
  mid: number
  name: string
  official_verify: OfficialVerify
  pendant: Pendant
  pub_action: PubAction
  pub_time: string
  pub_ts: number
  type: ModuleAuthorType
  vip: Vip
}

export interface FluffyAvatar {
  container_size: ContainerSize
  fallback_layers: FluffyFallbackLayers
  mid: string
}

export interface FluffyFallbackLayers {
  is_critical_group: boolean
  layers: FluffyLayer[]
}

export interface FluffyLayer {
  general_spec: GeneralSpec
  layer_config: FluffyLayerConfig
  resource: Resource
  visible: boolean
}

export interface FluffyLayerConfig {
  is_critical: boolean
  tags: FluffyTags
}

export interface FluffyTags {
  AVATAR_LAYER: Layer
  GENERAL_CFG: FluffyGENERALCFG
}

export interface FluffyGENERALCFG {
  config_type: number
  general_config: FluffyGeneralConfig
}

export interface FluffyGeneralConfig {
  web_css_style: FluffyWebCSSStyle
}

export interface FluffyWebCSSStyle {
  borderRadius: BorderRadius
}

export interface FluffyModuleDynamic {
  additional: null
  desc: null
  major: FluffyMajor
  topic: null
}

export interface FluffyMajor {
  archive: Archive
  type: MajorType
}

export enum DynamicType {
  DynamicTypeAV = 'DYNAMIC_TYPE_AV',
  DynamicTypeDraw = 'DYNAMIC_TYPE_DRAW',
  DynamicTypeForward = 'DYNAMIC_TYPE_FORWARD',
}
